# This file contains the environment variables for the SMA Collector project.
# Copy this file to .env and fill in the values for your environment.

# ----------------------------------------------------------------------
# Core Infrastructure Settings (for Docker Compose)
# ----------------------------------------------------------------------

# PostgreSQL Database Settings
# These are used by the 'postgres' and 'grafana' services in docker-compose.yml
POSTGRES_USER=sma_user
POSTGRES_PASSWORD=sma_password
POSTGRES_DB=sma_db

# RabbitMQ Settings
# These are used by the 'rabbitmq' service in docker-compose.yml
RABBITMQ_DEFAULT_USER=user
RABBITMQ_DEFAULT_PASS=password

# ----------------------------------------------------------------------
# Application Settings (for sma-collector and collector-worker)
# ----------------------------------------------------------------------

# Database URL
# For Docker setup, this is provided by the 'postgres' service.
# For local development (not recommended), you might use SQLite.
DATABASE_URL=postgresql+psycopg2://sma_user:sma_password@postgres:5432/sma_db
# DATABASE_URL="sqlite:///sma_data.db"

# RabbitMQ Host
# In the Docker setup, this should be the name of the rabbitmq service.
RABBITMQ_HOST=rabbitmq

# --- Data Source Configurations ---

# Git Settings
# URL of the remote git repository to clone and analyze.
GIT_REPO_URL=https://github.com/user/repo.git
# For local git repositories, you can use GIT_REPO_PATH (see config.py)
# GIT_REPO_PATH=/path/to/your/local/repo
GITHUB_TOKEN=your_github_personal_access_token_here

# Jira Settings
JIRA_SERVER=https://your-jira-instance.atlassian.net
JIRA_USERNAME=your-email@example.com
JIRA_API_TOKEN=your_jira_api_token_here
JIRA_PROJECT_KEY=YOUR_PROJECT_KEY

# Jenkins Settings
JENKINS_HOST=http://your-jenkins-instance:8080
JENKINS_USER=your_jenkins_user
JENKINS_TOKEN=your_jenkins_api_token
JENKINS_JOB_NAME=your_ci_job_name
DEPLOYMENT_JOB_NAME_PATTERN=your_deployment_job_pattern

# SonarQube Settings
SONARQUBE_HOST=http://your-sonarqube-instance:9000
SONARQUBE_TOKEN=your_sonarqube_api_token
SONARQUBE_PROJECT_KEY=your_sonarqube_project_key

# Bitbucket Settings (Optional, not used in default docker-compose)
BITBUCKET_SERVER=https://your-bitbucket-instance.com
BITBUCKET_USERNAME=user@example.com
BITBUCKET_API_TOKEN=your_api_token

# Swarm Settings (Optional, not used in default docker-compose)
SWARM_SERVER=https://your-swarm-instance.com
SWARM_USERNAME=user@example.com
SWARM_API_TOKEN=your_api_token

# --- Local File Path Settings (for volume mounts) ---
# These paths on your host machine will be mounted into the containers.
# The container will read data from these paths.
VTS_RESULTS_PATH=/path/to/vts_results
PROFILING_DATA_PATH=/path/to/profiling_data
SURVEY_DATA_PATH=/path/to/survey_data
